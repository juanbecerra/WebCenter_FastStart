package au.com.leighton.portal.profile.model;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jul 27 08:59:49 EST 2011
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProfExperienceViewRowImpl extends ViewRowImpl
{
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum
    {
        Id
        {
            public Object get(ProfExperienceViewRowImpl obj)
            {
                return obj.getId();
            }

            public void put(ProfExperienceViewRowImpl obj, Object value)
            {
                obj.setId((Number)value);
            }
        },
        Username
        {
            public Object get(ProfExperienceViewRowImpl obj)
            {
                return obj.getUsername();
            }

            public void put(ProfExperienceViewRowImpl obj, Object value)
            {
                obj.setUsername((String)value);
            }
        },
        Displayorder
        {
            public Object get(ProfExperienceViewRowImpl obj)
            {
                return obj.getDisplayorder();
            }

            public void put(ProfExperienceViewRowImpl obj, Object value)
            {
                obj.setDisplayorder((Number)value);
            }
        },
        Title
        {
            public Object get(ProfExperienceViewRowImpl obj)
            {
                return obj.getTitle();
            }

            public void put(ProfExperienceViewRowImpl obj, Object value)
            {
                obj.setTitle((String)value);
            }
        },
        Experiencedescription
        {
            public Object get(ProfExperienceViewRowImpl obj)
            {
                return obj.getExperiencedescription();
            }

            public void put(ProfExperienceViewRowImpl obj, Object value)
            {
                obj.setExperiencedescription((String)value);
            }
        },
        Deleted
        {
            public Object get(ProfExperienceViewRowImpl obj)
            {
                return obj.getDeleted();
            }

            public void put(ProfExperienceViewRowImpl obj, Object value)
            {
                obj.setDeleted((Number)value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ProfExperienceViewRowImpl object);

        public abstract void put(ProfExperienceViewRowImpl object,
                                 Object value);

        public int index()
        {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex()
        {
            return firstIndex;
        }

        public static int count()
        {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues()
        {
            if (vals == null)
            {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int USERNAME = AttributesEnum.Username.index();
    public static final int DISPLAYORDER = AttributesEnum.Displayorder.index();
    public static final int TITLE = AttributesEnum.Title.index();
    public static final int EXPERIENCEDESCRIPTION =
        AttributesEnum.Experiencedescription.index();
    public static final int DELETED = AttributesEnum.Deleted.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ProfExperienceViewRowImpl()
    {
    }

    /**
     * Gets ProfExperience entity object.
     * @return the ProfExperience
     */
    public EntityImpl getProfExperience()
    {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public Number getId()
    {
        return (Number)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(Number value)
    {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for USERNAME using the alias name Username.
     * @return the USERNAME
     */
    public String getUsername()
    {
        return (String)getAttributeInternal(USERNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for USERNAME using the alias name Username.
     * @param value value to set the USERNAME
     */
    public void setUsername(String value)
    {
        setAttributeInternal(USERNAME, value);
    }

    /**
     * Gets the attribute value for DISPLAYORDER using the alias name Displayorder.
     * @return the DISPLAYORDER
     */
    public Number getDisplayorder()
    {
        return (Number)getAttributeInternal(DISPLAYORDER);
    }

    /**
     * Sets <code>value</code> as attribute value for DISPLAYORDER using the alias name Displayorder.
     * @param value value to set the DISPLAYORDER
     */
    public void setDisplayorder(Number value)
    {
        setAttributeInternal(DISPLAYORDER, value);
    }

    /**
     * Gets the attribute value for TITLE using the alias name Title.
     * @return the TITLE
     */
    public String getTitle()
    {
        return (String)getAttributeInternal(TITLE);
    }

    /**
     * Sets <code>value</code> as attribute value for TITLE using the alias name Title.
     * @param value value to set the TITLE
     */
    public void setTitle(String value)
    {
        setAttributeInternal(TITLE, value);
    }

    /**
     * Gets the attribute value for EXPERIENCEDESCRIPTION using the alias name Experiencedescription.
     * @return the EXPERIENCEDESCRIPTION
     */
    public String getExperiencedescription()
    {
        return (String)getAttributeInternal(EXPERIENCEDESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for EXPERIENCEDESCRIPTION using the alias name Experiencedescription.
     * @param value value to set the EXPERIENCEDESCRIPTION
     */
    public void setExperiencedescription(String value)
    {
        setAttributeInternal(EXPERIENCEDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for DELETED using the alias name Deleted.
     * @return the DELETED
     */
    public Number getDeleted()
    {
        return (Number)getAttributeInternal(DELETED);
    }

    /**
     * Sets <code>value</code> as attribute value for DELETED using the alias name Deleted.
     * @param value value to set the DELETED
     */
    public void setDeleted(Number value)
    {
        setAttributeInternal(DELETED, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception
    {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count()))
        {
            return AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception
    {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count()))
        {
            AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    public ExperienceItem toBean()
    {
        ExperienceItem result = new ExperienceItem();

        result.setDeleted(getDeleted() == null ? false :
                          getDeleted().intValue() > 0);
        result.setDisplayOrder(getDisplayorder() == null ? 0 :
                               getDisplayorder().longValue());
        result.setExperienceDescription(getExperiencedescription());
        result.setId(getId() == null ? 0 : getId().longValue());
        result.setTitle(getTitle());
        result.setUsername(getUsername());

        return result;
    }
}
