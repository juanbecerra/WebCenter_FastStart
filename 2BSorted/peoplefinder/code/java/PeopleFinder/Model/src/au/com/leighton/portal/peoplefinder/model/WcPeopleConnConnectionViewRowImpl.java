package au.com.leighton.portal.peoplefinder.model;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Sep 30 10:47:58 EST 2011
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class WcPeopleConnConnectionViewRowImpl extends ViewRowImpl
{
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum
    {
        ConnectionId
        {
            public Object get(WcPeopleConnConnectionViewRowImpl obj)
            {
                return obj.getConnectionId();
            }

            public void put(WcPeopleConnConnectionViewRowImpl obj,
                            Object value)
            {
                obj.setConnectionId((String)value);
            }
        },
        OwnerId
        {
            public Object get(WcPeopleConnConnectionViewRowImpl obj)
            {
                return obj.getOwnerId();
            }

            public void put(WcPeopleConnConnectionViewRowImpl obj,
                            Object value)
            {
                obj.setOwnerId((String)value);
            }
        },
        ConnecteeId
        {
            public Object get(WcPeopleConnConnectionViewRowImpl obj)
            {
                return obj.getConnecteeId();
            }

            public void put(WcPeopleConnConnectionViewRowImpl obj,
                            Object value)
            {
                obj.setConnecteeId((String)value);
            }
        },
        Deleteable
        {
            public Object get(WcPeopleConnConnectionViewRowImpl obj)
            {
                return obj.getDeleteable();
            }

            public void put(WcPeopleConnConnectionViewRowImpl obj,
                            Object value)
            {
                obj.setDeleteable((String)value);
            }
        },
        CreationDate
        {
            public Object get(WcPeopleConnConnectionViewRowImpl obj)
            {
                return obj.getCreationDate();
            }

            public void put(WcPeopleConnConnectionViewRowImpl obj,
                            Object value)
            {
                obj.setCreationDate((Date)value);
            }
        },
        Version
        {
            public Object get(WcPeopleConnConnectionViewRowImpl obj)
            {
                return obj.getVersion();
            }

            public void put(WcPeopleConnConnectionViewRowImpl obj,
                            Object value)
            {
                obj.setVersion((Number)value);
            }
        },
        ApplicationId
        {
            public Object get(WcPeopleConnConnectionViewRowImpl obj)
            {
                return obj.getApplicationId();
            }

            public void put(WcPeopleConnConnectionViewRowImpl obj,
                            Object value)
            {
                obj.setApplicationId((String)value);
            }
        },
        EnterpriseId
        {
            public Object get(WcPeopleConnConnectionViewRowImpl obj)
            {
                return obj.getEnterpriseId();
            }

            public void put(WcPeopleConnConnectionViewRowImpl obj,
                            Object value)
            {
                obj.setEnterpriseId((Number)value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(WcPeopleConnConnectionViewRowImpl object);

        public abstract void put(WcPeopleConnConnectionViewRowImpl object,
                                 Object value);

        public int index()
        {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex()
        {
            return firstIndex;
        }

        public static int count()
        {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues()
        {
            if (vals == null)
            {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int CONNECTIONID = AttributesEnum.ConnectionId.index();
    public static final int OWNERID = AttributesEnum.OwnerId.index();
    public static final int CONNECTEEID = AttributesEnum.ConnecteeId.index();
    public static final int DELETEABLE = AttributesEnum.Deleteable.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int VERSION = AttributesEnum.Version.index();
    public static final int APPLICATIONID =
        AttributesEnum.ApplicationId.index();
    public static final int ENTERPRISEID = AttributesEnum.EnterpriseId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public WcPeopleConnConnectionViewRowImpl()
    {
    }

    /**
     * Gets the attribute value for the calculated attribute ConnectionId.
     * @return the ConnectionId
     */
    public String getConnectionId()
    {
        return (String)getAttributeInternal(CONNECTIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ConnectionId.
     * @param value value to set the  ConnectionId
     */
    public void setConnectionId(String value)
    {
        setAttributeInternal(CONNECTIONID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OwnerId.
     * @return the OwnerId
     */
    public String getOwnerId()
    {
        return (String)getAttributeInternal(OWNERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OwnerId.
     * @param value value to set the  OwnerId
     */
    public void setOwnerId(String value)
    {
        setAttributeInternal(OWNERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ConnecteeId.
     * @return the ConnecteeId
     */
    public String getConnecteeId()
    {
        return (String)getAttributeInternal(CONNECTEEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ConnecteeId.
     * @param value value to set the  ConnecteeId
     */
    public void setConnecteeId(String value)
    {
        setAttributeInternal(CONNECTEEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Deleteable.
     * @return the Deleteable
     */
    public String getDeleteable()
    {
        return (String)getAttributeInternal(DELETEABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Deleteable.
     * @param value value to set the  Deleteable
     */
    public void setDeleteable(String value)
    {
        setAttributeInternal(DELETEABLE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate()
    {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CreationDate.
     * @param value value to set the  CreationDate
     */
    public void setCreationDate(Date value)
    {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Version.
     * @return the Version
     */
    public Number getVersion()
    {
        return (Number)getAttributeInternal(VERSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Version.
     * @param value value to set the  Version
     */
    public void setVersion(Number value)
    {
        setAttributeInternal(VERSION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ApplicationId.
     * @return the ApplicationId
     */
    public String getApplicationId()
    {
        return (String)getAttributeInternal(APPLICATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ApplicationId.
     * @param value value to set the  ApplicationId
     */
    public void setApplicationId(String value)
    {
        setAttributeInternal(APPLICATIONID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EnterpriseId.
     * @return the EnterpriseId
     */
    public Number getEnterpriseId()
    {
        return (Number)getAttributeInternal(ENTERPRISEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EnterpriseId.
     * @param value value to set the  EnterpriseId
     */
    public void setEnterpriseId(Number value)
    {
        setAttributeInternal(ENTERPRISEID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception
    {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count()))
        {
            return AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception
    {
        if ((index >= AttributesEnum.firstIndex()) &&
            (index < AttributesEnum.count()))
        {
            AttributesEnum.staticValues()[index -
                AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    public PeopleConnection toBean()
    {
        PeopleConnection result = new PeopleConnection();

        result.setConnectionId(getConnectionId());
        result.setOwnerId(getOwnerId());
        result.setConnecteeId(getConnecteeId());
        result.setDeleable(getDeleteable());
        result.setCreationDate(getCreationDate());
        result.setVersion(getVersion());
        result.setApplicationId(getApplicationId());
        result.setEnterpriseId(getEnterpriseId());

        return result;
    }
}
