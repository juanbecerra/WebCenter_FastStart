package au.com.leighton.mytrainings.model.view;

import au.com.leighton.mytrainings.model.util.EnvironmentUtil;
import au.com.leighton.mytrainings.model.util.LogUtility;
import au.com.leighton.mytrainings.model.view.common.MyTrainingListCategoryVORow;

import java.sql.Date;

import java.util.ArrayList;

import oracle.adf.model.BindingContext;

import oracle.binding.BindingContainer;
import oracle.binding.OperationBinding;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.DBTransaction;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 22 18:04:39 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MyTrainingListCategoryVORowImpl extends ViewRowImpl implements MyTrainingListCategoryVORow {

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CourseName {
            public Object get(MyTrainingListCategoryVORowImpl obj) {
                return obj.getCourseName();
            }

            public void put(MyTrainingListCategoryVORowImpl obj,
                            Object value) {
                obj.setCourseName((String)value);
            }
        }
        ,
        Url {
            public Object get(MyTrainingListCategoryVORowImpl obj) {
                return obj.getUrl();
            }

            public void put(MyTrainingListCategoryVORowImpl obj,
                            Object value) {
                obj.setUrl((String)value);
            }
        }
        ,
        Descp {
            public Object get(MyTrainingListCategoryVORowImpl obj) {
                return obj.getDescp();
            }

            public void put(MyTrainingListCategoryVORowImpl obj,
                            Object value) {
                obj.setDescp((String)value);
            }
        }
        ,
        CourseId {
            public Object get(MyTrainingListCategoryVORowImpl obj) {
                return obj.getCourseId();
            }

            public void put(MyTrainingListCategoryVORowImpl obj,
                            Object value) {
                obj.setCourseId((Number)value);
            }
        }
        ,
        Mandatory {
            public Object get(MyTrainingListCategoryVORowImpl obj) {
                return obj.getMandatory();
            }

            public void put(MyTrainingListCategoryVORowImpl obj,
                            Object value) {
                obj.setMandatory((String)value);
            }
        }
        ,
        CurseDate {
            public Object get(MyTrainingListCategoryVORowImpl obj) {
                return obj.getCurseDate();
            }

            public void put(MyTrainingListCategoryVORowImpl obj,
                            Object value) {
                obj.setCurseDate((Date)value);
            }
        }
        ,
        CategoryName {
            public Object get(MyTrainingListCategoryVORowImpl obj) {
                return obj.getCategoryName();
            }

            public void put(MyTrainingListCategoryVORowImpl obj,
                            Object value) {
                obj.setCategoryName((String)value);
            }
        }
        ,
        CategoryId {
            public Object get(MyTrainingListCategoryVORowImpl obj) {
                return obj.getCategoryId();
            }

            public void put(MyTrainingListCategoryVORowImpl obj,
                            Object value) {
                obj.setCategoryId((Number)value);
            }
        }
        ,
        CountCategoryName {
            public Object get(MyTrainingListCategoryVORowImpl obj) {
                return obj.getCountCategoryName();
            }

            public void put(MyTrainingListCategoryVORowImpl obj,
                            Object value) {
                obj.setCountCategoryName((Number)value);
            }
        }
        ,
        MyTrainingList_VO1 {
            public Object get(MyTrainingListCategoryVORowImpl obj) {
                return obj.getMyTrainingList_VO1();
            }

            public void put(MyTrainingListCategoryVORowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MyTrainingListCategoryVO1 {
            public Object get(MyTrainingListCategoryVORowImpl obj) {
                return obj.getMyTrainingListCategoryVO1();
            }

            public void put(MyTrainingListCategoryVORowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MyTrainingListCategoryVORowImpl object);

        public abstract void put(MyTrainingListCategoryVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    static String lastCname = "";
    static int counter = 1;
     static ArrayList arr = new ArrayList();


    public static final int COURSENAME = AttributesEnum.CourseName.index();
    public static final int URL = AttributesEnum.Url.index();
    public static final int DESCP = AttributesEnum.Descp.index();
    public static final int COURSEID = AttributesEnum.CourseId.index();
    public static final int MANDATORY = AttributesEnum.Mandatory.index();
    public static final int CURSEDATE = AttributesEnum.CurseDate.index();
    public static final int CATEGORYNAME = AttributesEnum.CategoryName.index();
    public static final int CATEGORYID = AttributesEnum.CategoryId.index();
    public static final int COUNTCATEGORYNAME = AttributesEnum.CountCategoryName.index();
    public static final int MYTRAININGLIST_VO1 = AttributesEnum.MyTrainingList_VO1.index();
    public static final int MYTRAININGLISTCATEGORYVO1 = AttributesEnum.MyTrainingListCategoryVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MyTrainingListCategoryVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CategoryId.
     * @return the CategoryId
     */
    public Number getCategoryId() {
        return (Number)getAttributeInternal(CATEGORYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CategoryId.
     * @param value value to set the  CategoryId
     */
    public void setCategoryId(Number value) {
        setAttributeInternal(CATEGORYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CategoryName.
     * @return the CategoryName
     */

    public String getCategoryName() {
      //  String lastcategoryname =
          //  checkCategoryname((String)getAttributeInternal(CATEGORYNAME));
        return (String)getAttributeInternal(CATEGORYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CategoryName.
     * @param value value to set the  CategoryName
     */
    public void setCategoryName(String value) {
        setAttributeInternal(CATEGORYNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CourseName.
     * @return the CourseName
     */
    public String getCourseName() {
        return (String)getAttributeInternal(COURSENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CourseName.
     * @param value value to set the  CourseName
     */
    public void setCourseName(String value) {
        setAttributeInternal(COURSENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Url.
     * @return the Url
     */
    public String getUrl() {
        return (String) getAttributeInternal(URL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Url.
     * @param value value to set the  Url
     */
    public void setUrl(String value) {
        setAttributeInternal(URL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Descp.
     * @return the Descp
     */
    public String getDescp() {
        return (String)getAttributeInternal(DESCP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Descp.
     * @param value value to set the  Descp
     */
    public void setDescp(String value) {
        setAttributeInternal(DESCP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CourseId.
     * @return the CourseId
     */
    public Number getCourseId() {
        return (Number)getAttributeInternal(COURSEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CourseId.
     * @param value value to set the  CourseId
     */
    public void setCourseId(Number value) {
        setAttributeInternal(COURSEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Mandatory.
     * @return the Mandatory
     */
    public String getMandatory() {
        return (String)getAttributeInternal(MANDATORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Mandatory.
     * @param value value to set the  Mandatory
     */
    public void setMandatory(String value) {
        setAttributeInternal(MANDATORY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurseDate.
     * @return the CurseDate
     */
    public Date getCurseDate() {
        return (Date) getAttributeInternal(CURSEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurseDate.
     * @param value value to set the  CurseDate
     */
    public void setCurseDate(Date value) {
        setAttributeInternal(CURSEDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CountCategoryName.
     * @return the CountCategoryName
     */
    public Number getCountCategoryName() {
        return (Number)getAttributeInternal(COUNTCATEGORYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CountCategoryName.
     * @param value value to set the  CountCategoryName
     */
    public void setCountCategoryName(Number value) {
        setAttributeInternal(COUNTCATEGORYNAME, value);
    }


    /**
     * Gets the attribute value for the calculated attribute courseName.
     * @return the courseName
     */
    public String getcourseName() {
        return (String)getAttributeInternal(COURSENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute courseName.
     * @param value value to set the  courseName
     */
    public void setcourseName(String value) {
        setAttributeInternal(COURSENAME, value);
    }


    /**
     * Gets the view accessor <code>RowSet</code> MyTrainingList_VO1.
     */
    public RowSet getMyTrainingList_VO1() {
        return (RowSet)getAttributeInternal(MYTRAININGLIST_VO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MyTrainingListCategoryVO1.
     */
    public RowSet getMyTrainingListCategoryVO1() {
        return (RowSet)getAttributeInternal(MYTRAININGLISTCATEGORYVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    public String checkCategoryname(String categoryname) {
        
       if(arr.contains(categoryname)){
           return "";
       }else{
           arr.add(categoryname);
           return categoryname;
       }

  
    }

    public void deleteCourse(Number curseId) {

       
         String username = EnvironmentUtil.getUsername();
        try {
            DBTransaction bTransaction = getDBTransaction();
            ViewObject vo =
                bTransaction.findViewObject("MyUserTraininglist_VO1");
            vo.setNamedWhereClauseParam("userName", username);
            vo.setNamedWhereClauseParam("courseId", curseId);
            vo.clearCache();
            vo.executeQuery();
            Row rw = vo.first();
           rw.remove();
            this.getDBTransaction().commit();
            BindingContainer bindings = getBindings();
            OperationBinding operationBinding = bindings.getOperationBinding("getTainingCategorybyList");
            Object result = operationBinding.execute();
        } catch (Exception e) {
            String message = e.getMessage();
            e.printStackTrace();
              LogUtility.logSevere(EnvironmentUtil.class, message, e);
        }

    }
    public BindingContainer getBindings() {
        return BindingContext.getCurrent().getCurrentBindingsEntry();
    }
}
